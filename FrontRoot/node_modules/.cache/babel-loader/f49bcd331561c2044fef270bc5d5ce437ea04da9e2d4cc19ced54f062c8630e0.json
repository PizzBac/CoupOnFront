{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider } from 'react-stomp-hooks';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport CustomModal from './CustomModal';\nimport Player from '../front/player'; // Player 컴포넌트를 import\n\nimport './StompHookProps.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHookProps() {\n  _s();\n  const subscription = \"/user/lobby\";\n  const [destination, setDestination] = useState(\"/app/create\");\n  const headers = JSON.stringify({\n    \"lobbyName\": \"Room1\"\n  });\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const handleReceivedMessage = message => {\n    setReceivedMessage(message);\n  };\n\n  // receivedMessage가 업데이트되면 실행되는 useEffect\n  useEffect(() => {\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      const parsedMessage = JSON.parse(receivedMessage);\n      if (parsedMessage.type === 'UPDATE') {\n        const {\n          userMessage,\n          content\n        } = parsedMessage;\n      }\n    }\n  }, [receivedMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(StompSessionProvider, {\n      url: \"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\",\n      children: [/*#__PURE__*/_jsxDEV(StompHook, {\n        subscription: subscription,\n        destination: destination,\n        headers: headers,\n        body: body,\n        onReceivedMessage: handleReceivedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BankerConsole\",\n        children: [/*#__PURE__*/_jsxDEV(Banker, {\n          receivedMessage: receivedMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Console, {\n          destination: destination,\n          body: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}') && JSON.parse(receivedMessage).type === 'UPDATE' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JSON.parse(receivedMessage).content.players.map(player => /*#__PURE__*/_jsxDEV(Player, {\n          name: player.name,\n          coins: player.coins,\n          cardNumbers: player.cardNumbers\n        }, player.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(StompHookProps, \"0GBxm/YpiI2rItqzyatRKvnOKzg=\");\n_c = StompHookProps;\nexport default StompHookProps;\nvar _c;\n$RefreshReg$(_c, \"StompHookProps\");","map":{"version":3,"names":["React","useState","useEffect","StompHook","StompSessionProvider","Banker","Console","CustomModal","Player","jsxDEV","_jsxDEV","StompHookProps","_s","subscription","destination","setDestination","headers","JSON","stringify","body","receivedMessage","setReceivedMessage","handleReceivedMessage","message","trim","startsWith","endsWith","parsedMessage","parse","type","userMessage","content","children","url","onReceivedMessage","fileName","_jsxFileName","lineNumber","columnNumber","className","players","map","player","name","coins","cardNumbers","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider } from 'react-stomp-hooks';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport CustomModal from './CustomModal';\nimport Player from '../front/player'; // Player 컴포넌트를 import\n\nimport './StompHookProps.css';\n\nfunction StompHookProps() {\n  const subscription = \"/user/lobby\";\n  const [destination, setDestination] = useState(\"/app/create\");\n  const headers = JSON.stringify({ \"lobbyName\": \"Room1\" });\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n\n  const handleReceivedMessage = (message) => {\n    setReceivedMessage(message);\n  };\n\n  // receivedMessage가 업데이트되면 실행되는 useEffect\n  useEffect(() => {\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      const parsedMessage = JSON.parse(receivedMessage);\n      if (parsedMessage.type === 'UPDATE') {\n        const { userMessage, content } = parsedMessage;\n      }\n    }\n  }, [receivedMessage]);\n\n  return (\n    <div>\n      <StompSessionProvider url=\"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\">\n        <StompHook\n          subscription={subscription}\n          destination={destination}\n          headers={headers}\n          body={body}\n          onReceivedMessage={handleReceivedMessage}\n        />\n        <div className=\"BankerConsole\">\n          <Banker receivedMessage={receivedMessage} />\n          <Console destination={destination} body={body} />\n        </div>\n        {/* receivedMessage가 업데이트되면 Player 컴포넌트를 렌더링 */}\n        {typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}') && JSON.parse(receivedMessage).type === 'UPDATE' &&\n          <div>\n            {JSON.parse(receivedMessage).content.players.map(player => (\n              <Player key={player.name} name={player.name} coins={player.coins} cardNumbers={player.cardNumbers} />\n            ))}\n          </div>\n        }\n      </StompSessionProvider>\n    </div>\n  );\n}\n\nexport default StompHookProps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}