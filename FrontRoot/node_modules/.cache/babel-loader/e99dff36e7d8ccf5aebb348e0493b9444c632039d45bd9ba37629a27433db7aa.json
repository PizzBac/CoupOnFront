{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider, useStompClient } from 'react-stomp-hooks';\nimport { useLocation } from 'react-router-dom';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Player from '../front/player';\nimport './StompHookProps.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHookProps() {\n  _s2();\n  var _s = $RefreshSig$();\n  const location = useLocation();\n  const {\n    destination,\n    headers\n  } = location.state;\n  const lobbyName = headers.lobbyName;\n  const subscription = \"/user/lobby\";\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const handleReceivedMessage = message => {\n    setReceivedMessage(message);\n  };\n  _s(useEffect(_s(() => {\n    _s();\n    const stompClient = useStompClient();\n    if (stompClient) {\n      stompClient.publish({\n        destination,\n        headers,\n        body\n      });\n      console.log(headers);\n    } else {\n      console.log(\"stompClient is null\");\n    }\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      const parsedMessage = JSON.parse(receivedMessage);\n      if (parsedMessage.type === 'UPDATE') {\n        const {\n          userMessage,\n          content\n        } = parsedMessage;\n        console.log(userMessage, content);\n        console.log(JSON.parse(receivedMessage).content.players);\n      }\n    }\n  }, \"SdCBBLKVKX5JibwxYV5Y1qlXGRw=\", false, function () {\n    return [useStompClient];\n  }), [receivedMessage]), \"SdCBBLKVKX5JibwxYV5Y1qlXGRw=\", false, function () {\n    return [useStompClient];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(StompSessionProvider, {\n      url: \"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\",\n      children: [/*#__PURE__*/_jsxDEV(StompHook, {\n        subscription: subscription,\n        destination: destination,\n        headers: headers,\n        body: body,\n        onReceivedMessage: handleReceivedMessage,\n        lobbyName: lobbyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BankerConsole\",\n        children: [/*#__PURE__*/_jsxDEV(Banker, {\n          receivedMessage: receivedMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Console, {\n          destination: destination,\n          body: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), receivedMessage !== \"\" && typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}') && JSON.parse(receivedMessage).type === 'UPDATE' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JSON.parse(receivedMessage).content.players.map(player => /*#__PURE__*/_jsxDEV(Player, {\n          name: player.name,\n          coins: player.coins,\n          cardNumbers: player.cardNumbers\n        }, player.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s2(StompHookProps, \"kuhurTt7EPJWF26vD0y9CguSpJY=\", false, function () {\n  return [useLocation];\n});\n_c = StompHookProps;\nexport default StompHookProps;\n// 경로 지정\n// export const STOMP_HOOK_PROPS_PATH = '/stomphookprops';\nvar _c;\n$RefreshReg$(_c, \"StompHookProps\");","map":{"version":3,"names":["React","useState","useEffect","StompHook","StompSessionProvider","useStompClient","useLocation","Banker","Console","Player","jsxDEV","_jsxDEV","StompHookProps","_s2","_s","$RefreshSig$","location","destination","headers","state","lobbyName","subscription","body","receivedMessage","setReceivedMessage","handleReceivedMessage","message","stompClient","publish","console","log","trim","startsWith","endsWith","parsedMessage","JSON","parse","type","userMessage","content","players","children","url","onReceivedMessage","fileName","_jsxFileName","lineNumber","columnNumber","className","map","player","name","coins","cardNumbers","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider, useStompClient } from 'react-stomp-hooks';\nimport { useLocation } from 'react-router-dom';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Player from '../front/player';\n\nimport './StompHookProps.css';\n\nfunction StompHookProps() {\n\n  const location = useLocation();\n\n  const { destination, headers } = location.state;\n  const lobbyName = headers.lobbyName;\n  const subscription = \"/user/lobby\";\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n\n  const handleReceivedMessage = (message) => {\n    setReceivedMessage(message);\n  };\n\n  useEffect(() => {\n    const stompClient = useStompClient();\n    if (stompClient) {\n      stompClient.publish({\n        destination,\n        headers,\n        body,\n      });\n      console.log(headers);\n    } else {\n      console.log(\"stompClient is null\");\n    }\n\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      const parsedMessage = JSON.parse(receivedMessage);\n      if (parsedMessage.type === 'UPDATE') {\n        const { userMessage, content } = parsedMessage;\n        console.log(userMessage, content);\n        console.log(JSON.parse(receivedMessage).content.players);\n      } \n    }\n  }, [receivedMessage]);\n\n  return (\n    <div>\n      <StompSessionProvider url=\"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\">\n        <StompHook\n          subscription={subscription}\n          destination={destination}\n          headers={headers}\n          body={body}\n          onReceivedMessage={handleReceivedMessage}\n          lobbyName={lobbyName}\n        />\n        <div className=\"BankerConsole\">\n          <Banker receivedMessage={receivedMessage} />\n          <Console destination={destination} body={body} />\n        </div>\n        {receivedMessage !== \"\" && typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}') && JSON.parse(receivedMessage).type === 'UPDATE' &&\n          <div>\n            {JSON.parse(receivedMessage).content.players.map(player => (\n              <Player key={player.name} name={player.name} coins={player.coins} cardNumbers={player.cardNumbers} />\n            ))}\n          </div>\n        }\n      </StompSessionProvider>\n    </div>\n  );\n}\n\nexport default StompHookProps;\n// 경로 지정\n// export const STOMP_HOOK_PROPS_PATH = '/stomphookprops';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}