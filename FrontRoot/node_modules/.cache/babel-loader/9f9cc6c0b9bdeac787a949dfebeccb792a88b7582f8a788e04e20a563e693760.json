{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHook.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSubscription, useStompClient } from 'react-stomp-hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHook(_ref) {\n  _s();\n  let {\n    subscription,\n    destination,\n    headers,\n    body,\n    onReceivedMessage\n  } = _ref;\n  // ...\n  useSubscription(subscription, str => {\n    setReceivedMessage(str.body);\n    if (onReceivedMessage) {\n      onReceivedMessage(str.body);\n    }\n  });\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (stompClient) {\n      stompClient.publish({\n        destination,\n        headers,\n        body\n      });\n    } else {\n      console.log(\"stompClient is null\");\n    } // 통신이 안되면.\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"\\uC11C\\uBC84\\uB85C \\uBA54\\uC138\\uC9C0 \\uBCF4\\uB0B4\\uAE30(\\uD1B5\\uC2E0)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Received message: \", receivedMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(StompHook, \"wpUHqjcXqLAwY/8SnoVwGjhIUKk=\", false, function () {\n  return [useSubscription];\n});\n_c = StompHook;\nexport default StompHook;\nvar _c;\n$RefreshReg$(_c, \"StompHook\");","map":{"version":3,"names":["React","useState","useSubscription","useStompClient","jsxDEV","_jsxDEV","StompHook","_ref","_s","subscription","destination","headers","body","onReceivedMessage","str","setReceivedMessage","handleSubmit","event","preventDefault","stompClient","publish","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","receivedMessage","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHook.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSubscription, useStompClient } from 'react-stomp-hooks';\n\nfunction StompHook({ subscription, destination, headers, body, onReceivedMessage }) {\n  // ...\n  useSubscription(subscription, (str) => {\n    setReceivedMessage(str.body);\n    if (onReceivedMessage) {\n      onReceivedMessage(str.body);\n    }\n  });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (stompClient) {\n      stompClient.publish({\n        destination,\n        headers,\n        body,\n      });\n    } else {\n      console.log(\"stompClient is null\");\n    } // 통신이 안되면.\n  }\n\n  return (\n    <div>\n    <button onClick={handleSubmit}>서버로 메세지 보내기(통신)</button>\n    <p>Received message: {receivedMessage}</p>\n    </div>\n  );\n}\n\nexport default StompHook;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,cAAc,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,SAASC,SAASA,CAAAC,IAAA,EAAkE;EAAAC,EAAA;EAAA,IAAjE;IAAEC,YAAY;IAAEC,WAAW;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAkB,CAAC,GAAAN,IAAA;EAChF;EACAL,eAAe,CAACO,YAAY,EAAGK,GAAG,IAAK;IACrCC,kBAAkB,CAACD,GAAG,CAACF,IAAI,CAAC;IAC5B,IAAIC,iBAAiB,EAAE;MACrBA,iBAAiB,CAACC,GAAG,CAACF,IAAI,CAAC;IAC7B;EACF,CAAC,CAAC;EAEF,SAASI,YAAYA,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAIC,WAAW,EAAE;MACfA,WAAW,CAACC,OAAO,CAAC;QAClBV,WAAW;QACXC,OAAO;QACPC;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLS,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;EACJ;;EAEA,oBACEjB,OAAA;IAAAkB,QAAA,gBACAlB,OAAA;MAAQmB,OAAO,EAAER,YAAa;MAAAO,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACvDvB,OAAA;MAAAkB,QAAA,GAAG,oBAAkB,EAACM,eAAe;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpC;AAEV;AAACpB,EAAA,CA7BQF,SAAS;EAAA,QAEhBJ,eAAe;AAAA;AAAA4B,EAAA,GAFRxB,SAAS;AA+BlB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}