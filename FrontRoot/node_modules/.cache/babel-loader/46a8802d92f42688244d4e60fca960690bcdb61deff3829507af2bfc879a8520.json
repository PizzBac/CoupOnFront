{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/front/banker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './banker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Banker(props) {\n  _s();\n  const {\n    receivedMessage\n  } = props;\n  useEffect(() => {\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      console.log('JSON형태입니다.');\n      const message = JSON.parse(receivedMessage);\n      console.log(message.content);\n    } else if (receivedMessage === null) {\n      console.log('서버로부터 도착한 메세지가 없습니다.');\n    } else {\n      console.log('JSON형태가 아닙니다.');\n    }\n  }, [receivedMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"banker\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"announcement anc-message\",\n      children: receivedMessage ? receivedMessage : 'Waiting for other players...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Banker, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Banker;\nexport default Banker;\nvar _c;\n$RefreshReg$(_c, \"Banker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Banker","props","_s","receivedMessage","trim","startsWith","endsWith","console","log","message","JSON","parse","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/front/banker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './banker.css';\n\nfunction Banker(props) {\n  const { receivedMessage } = props;\n\n  useEffect(() => {\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      console.log('JSON형태입니다.');\n      const message = JSON.parse(receivedMessage);\n      console.log(message.content);\n    } else if (receivedMessage === null){\n      console.log('서버로부터 도착한 메세지가 없습니다.');\n    } else {\n      console.log('JSON형태가 아닙니다.');\n    }\n  }, [receivedMessage]);\n\n  return (\n    <div className=\"banker\">\n      <p className=\"announcement anc-message\">\n        {receivedMessage ? receivedMessage : 'Waiting for other players...'}\n      </p>\n    </div>\n  );\n}\n\nexport default Banker;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAgB,CAAC,GAAGF,KAAK;EAEjCJ,SAAS,CAAC,MAAM;IACd,IAAI,OAAOM,eAAe,KAAK,QAAQ,IAAIA,eAAe,CAACC,IAAI,EAAE,CAACC,UAAU,CAAC,GAAG,CAAC,IAAIF,eAAe,CAACC,IAAI,EAAE,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;MACzHC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACR,eAAe,CAAC;MAC3CI,OAAO,CAACC,GAAG,CAACC,OAAO,CAACG,OAAO,CAAC;IAC9B,CAAC,MAAM,IAAIT,eAAe,KAAK,IAAI,EAAC;MAClCI,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACrC,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9B;EACF,CAAC,EAAE,CAACL,eAAe,CAAC,CAAC;EAErB,oBACEJ,OAAA;IAAKc,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBf,OAAA;MAAGc,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EACpCX,eAAe,GAAGA,eAAe,GAAG;IAA8B;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACjE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEV;AAAChB,EAAA,CAtBQF,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAwBf,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}