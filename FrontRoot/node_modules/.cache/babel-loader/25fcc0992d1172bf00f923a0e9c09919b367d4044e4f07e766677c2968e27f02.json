{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport StompHook from './StompHook';\nimport { useLocation } from 'react-router-dom';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Player from '../front/player';\nimport './StompHookProps.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHookProps() {\n  _s();\n  // const location = useLocation();\n\n  // const { destination, headers } = location.state;\n  // const lobbyName = headers.lobbyName;\n  const [destination, setDestination] = useState(\"/app/create\");\n  const [lobbyName, setLobbyName] = useState(\"test5\");\n  const [headers, setHeaders] = useState({\n    lobbyName: lobbyName\n  });\n  const subscription = \"/user/lobby\";\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const [latestUpdateMessage, setLatestUpdateMessage] = useState(\"\");\n  const messageListRef = useRef([]);\n  let msg;\n  const handleReceivedMessage = message => {\n    msg = message;\n    setReceivedMessage(message);\n    messageListRef.current = [...messageListRef.current, receivedMessage, msg];\n  };\n  console.log(messageListRef);\n\n  // const [newSample, setNewSample] = useState([]);\n  // useEffect(() => {\n  //   messageRef.current.push(receivedMessage);\n  //   console.log(messageRef);\n  //   const updateMessages = messageRef.current.filter((msg) => {\n  //     // {로 시작하고 }로 끝나는 문자열 중에서 type이 UPDATE인 것만 필터링\n  //     if (msg.startsWith(\"{\") && msg.endsWith(\"}\")) {\n  //       const parsedMsg = JSON.parse(msg);\n  //       return parsedMsg.type === \"UPDATE\";\n  //     } else {\n  //       return false;\n  //     }\n  //   });\n\n  //   console.log(updateMessages);\n  //   console.log(\"hihihihihihihihihihihihihihihihihihi\");\n\n  //   // 이전 값들을 모두 복사한 후, 새로운 값 추가\n  //   updateMessageRef.current = [...updateMessageRef.current, ...updateMessages];\n  //   // 이전 값들을 모두 삭제\n  //   messageRef.current = [];\n  // }, [receivedMessage]);\n\n  // setNewSample(updateMessageRef.current.filter((ele, idx) => ele !== undefined ));\n  // console.log(newSample);\n  // console.log(JSON.parse(updateMessageRef.current[0]).content.localPlayerCards);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StompHook, {\n      subscription: subscription,\n      destination: destination,\n      headers: headers,\n      body: body,\n      onReceivedMessage: handleReceivedMessage,\n      lobbyName: lobbyName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BankerConsole\",\n      children: [/*#__PURE__*/_jsxDEV(Banker, {\n        receivedMessage: receivedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Console, {\n        destination: destination,\n        lobbyName: lobbyName,\n        body: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(StompHookProps, \"pf0g4473Q73Gr9QalVuTzadULK0=\");\n_c = StompHookProps;\nexport default StompHookProps;\nvar _c;\n$RefreshReg$(_c, \"StompHookProps\");","map":{"version":3,"names":["React","useState","useEffect","useRef","StompHook","useLocation","Banker","Console","Player","jsxDEV","_jsxDEV","StompHookProps","_s","destination","setDestination","lobbyName","setLobbyName","headers","setHeaders","subscription","body","receivedMessage","setReceivedMessage","latestUpdateMessage","setLatestUpdateMessage","messageListRef","msg","handleReceivedMessage","message","current","console","log","children","onReceivedMessage","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport StompHook from './StompHook';\nimport { useLocation } from 'react-router-dom';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Player from '../front/player';\n\nimport './StompHookProps.css';\n\nfunction StompHookProps() {\n\n  // const location = useLocation();\n\n  // const { destination, headers } = location.state;\n  // const lobbyName = headers.lobbyName;\n  const [destination, setDestination] = useState(\"/app/create\");\n  const [lobbyName, setLobbyName] = useState(\"test5\");\n  const [headers, setHeaders] = useState({lobbyName: lobbyName});\n  const subscription = \"/user/lobby\";\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const [latestUpdateMessage, setLatestUpdateMessage] = useState(\"\");\n  const messageListRef = useRef([]);\n  let msg;\n\n  const handleReceivedMessage = (message) => {\n    msg = message;\n    setReceivedMessage(message);\n    messageListRef.current = [...messageListRef.current, receivedMessage, msg];\n    \n  };\n\n  console.log(messageListRef);\n\n  // const [newSample, setNewSample] = useState([]);\n  // useEffect(() => {\n  //   messageRef.current.push(receivedMessage);\n  //   console.log(messageRef);\n  //   const updateMessages = messageRef.current.filter((msg) => {\n  //     // {로 시작하고 }로 끝나는 문자열 중에서 type이 UPDATE인 것만 필터링\n  //     if (msg.startsWith(\"{\") && msg.endsWith(\"}\")) {\n  //       const parsedMsg = JSON.parse(msg);\n  //       return parsedMsg.type === \"UPDATE\";\n  //     } else {\n  //       return false;\n  //     }\n  //   });\n\n  //   console.log(updateMessages);\n  //   console.log(\"hihihihihihihihihihihihihihihihihihi\");\n\n  //   // 이전 값들을 모두 복사한 후, 새로운 값 추가\n  //   updateMessageRef.current = [...updateMessageRef.current, ...updateMessages];\n  //   // 이전 값들을 모두 삭제\n  //   messageRef.current = [];\n  // }, [receivedMessage]);\n\n  // setNewSample(updateMessageRef.current.filter((ele, idx) => ele !== undefined ));\n  // console.log(newSample);\n  // console.log(JSON.parse(updateMessageRef.current[0]).content.localPlayerCards);\n\n  return ( \n    <div>\n        <StompHook\n          subscription={subscription}\n          destination={destination}\n          headers={headers}\n          body={body}\n          onReceivedMessage={handleReceivedMessage}\n          lobbyName={lobbyName}\n        />\n        <div className=\"BankerConsole\">\n          <Banker receivedMessage={receivedMessage} />\n          <Console destination={destination} lobbyName={lobbyName} body={body} />\n        </div>\n        \n    </div>\n  );\n}\n\nexport default StompHookProps;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAExB;;EAEA;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,aAAa,CAAC;EAC7D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC;IAACc,SAAS,EAAEA;EAAS,CAAC,CAAC;EAC9D,MAAMI,YAAY,GAAG,aAAa;EAClC,MAAMC,IAAI,GAAG,QAAQ;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACsB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAMwB,cAAc,GAAGtB,MAAM,CAAC,EAAE,CAAC;EACjC,IAAIuB,GAAG;EAEP,MAAMC,qBAAqB,GAAIC,OAAO,IAAK;IACzCF,GAAG,GAAGE,OAAO;IACbN,kBAAkB,CAACM,OAAO,CAAC;IAC3BH,cAAc,CAACI,OAAO,GAAG,CAAC,GAAGJ,cAAc,CAACI,OAAO,EAAER,eAAe,EAAEK,GAAG,CAAC;EAE5E,CAAC;EAEDI,OAAO,CAACC,GAAG,CAACN,cAAc,CAAC;;EAE3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACEf,OAAA;IAAAsB,QAAA,gBACItB,OAAA,CAACN,SAAS;MACRe,YAAY,EAAEA,YAAa;MAC3BN,WAAW,EAAEA,WAAY;MACzBI,OAAO,EAAEA,OAAQ;MACjBG,IAAI,EAAEA,IAAK;MACXa,iBAAiB,EAAEN,qBAAsB;MACzCZ,SAAS,EAAEA;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB,eACF3B,OAAA;MAAK4B,SAAS,EAAC,eAAe;MAAAN,QAAA,gBAC5BtB,OAAA,CAACJ,MAAM;QAACe,eAAe,EAAEA;MAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC5C3B,OAAA,CAACH,OAAO;QAACM,WAAW,EAAEA,WAAY;QAACE,SAAS,EAAEA,SAAU;QAACK,IAAI,EAAEA;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAEV;AAACzB,EAAA,CArEQD,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAuEvB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}