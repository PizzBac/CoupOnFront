{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport StompHook from './StompHook';\nimport { useLocation } from 'react-router-dom';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Player from '../front/player';\nimport './StompHookProps.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHookProps() {\n  _s();\n  // const location = useLocation();\n\n  // const { destination, headers } = location.state;\n  // const lobbyName = headers.lobbyName;\n  const [destination, setDestination] = useState(\"/app/game\");\n  const [lobbyName, setLobbyName] = useState(\"test\");\n  const [headers, setHeaders] = useState({\n    lobbyName: lobbyName\n  });\n  const subscription = \"/user/lobby\";\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const messageRef = useRef([]);\n  const handleReceivedMessage = message => {\n    setReceivedMessage(message);\n    messageRef.current.push(message); // useRef로 저장\n  };\n\n  useEffect(() => {\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      const parsedMessage = JSON.parse(receivedMessage);\n      if (parsedMessage.type === 'UPDATE') {\n        const {\n          userMessage,\n          content\n        } = parsedMessage;\n        // console.log(userMessage, content);\n        // console.log(JSON.parse(receivedMessage).content.players);\n      }\n    }\n  }, [receivedMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StompHook, {\n      subscription: subscription,\n      destination: destination,\n      headers: headers,\n      body: body,\n      onReceivedMessage: handleReceivedMessage,\n      lobbyName: lobbyName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BankerConsole\",\n      children: [/*#__PURE__*/_jsxDEV(Banker, {\n        receivedMessage: receivedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Console, {\n        destination: destination,\n        lobbyName: lobbyName,\n        body: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(StompHookProps, \"pfC2kVLl+kHtdr2NXa5F5u63u3o=\");\n_c = StompHookProps;\nexport default StompHookProps;\n// 경로 지정\n// export const STOMP_HOOK_PROPS_PATH = '/stomphookprops';\nvar _c;\n$RefreshReg$(_c, \"StompHookProps\");","map":{"version":3,"names":["React","useState","useEffect","useRef","StompHook","useLocation","Banker","Console","Player","jsxDEV","_jsxDEV","StompHookProps","_s","destination","setDestination","lobbyName","setLobbyName","headers","setHeaders","subscription","body","receivedMessage","setReceivedMessage","messageRef","handleReceivedMessage","message","current","push","trim","startsWith","endsWith","parsedMessage","JSON","parse","type","userMessage","content","children","onReceivedMessage","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport StompHook from './StompHook';\nimport { useLocation } from 'react-router-dom';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Player from '../front/player';\n\nimport './StompHookProps.css';\n\nfunction StompHookProps() {\n\n  // const location = useLocation();\n\n  // const { destination, headers } = location.state;\n  // const lobbyName = headers.lobbyName;\n  const [destination, setDestination] = useState(\"/app/game\");\n  const [lobbyName, setLobbyName] = useState(\"test\");\n  const [headers, setHeaders] = useState({lobbyName: lobbyName});\n  const subscription = \"/user/lobby\";\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const messageRef = useRef([]);\n\n  const handleReceivedMessage = (message) => {\n    setReceivedMessage(message);\n    messageRef.current.push(message); // useRef로 저장\n  };\n\n  useEffect(() => {\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      const parsedMessage = JSON.parse(receivedMessage);\n      if (parsedMessage.type === 'UPDATE') {\n        const { userMessage, content } = parsedMessage;\n        // console.log(userMessage, content);\n        // console.log(JSON.parse(receivedMessage).content.players);\n      } \n    }\n  }, [receivedMessage]);\n\n  return (\n    <div>\n        <StompHook\n          subscription={subscription}\n          destination={destination}\n          headers={headers}\n          body={body}\n          onReceivedMessage={handleReceivedMessage}\n          lobbyName={lobbyName}\n        />\n        <div className=\"BankerConsole\">\n          <Banker receivedMessage={receivedMessage} />\n          <Console destination={destination} lobbyName={lobbyName} body={body} />\n        </div>\n        {/* <div>\n          {messageRef.current.map((msg, index) => (\n            <Player key={index} name={JSON.parse(msg).content.players[0].name} coins={JSON.parse(msg).content.players[0].coins} cardNumbers={JSON.parse(msg).content.players[0].cardNumbers} />\n          ))}\n        </div> */}\n    </div>\n  );\n}\n\nexport default StompHookProps;\n// 경로 지정\n// export const STOMP_HOOK_PROPS_PATH = '/stomphookprops';\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAExB;;EAEA;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,WAAW,CAAC;EAC3D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC;EAClD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC;IAACc,SAAS,EAAEA;EAAS,CAAC,CAAC;EAC9D,MAAMI,YAAY,GAAG,aAAa;EAClC,MAAMC,IAAI,GAAG,QAAQ;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMsB,UAAU,GAAGpB,MAAM,CAAC,EAAE,CAAC;EAE7B,MAAMqB,qBAAqB,GAAIC,OAAO,IAAK;IACzCH,kBAAkB,CAACG,OAAO,CAAC;IAC3BF,UAAU,CAACG,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC,CAAC,CAAC;EACpC,CAAC;;EAEDvB,SAAS,CAAC,MAAM;IACd,IAAI,OAAOmB,eAAe,KAAK,QAAQ,IAAIA,eAAe,CAACO,IAAI,EAAE,CAACC,UAAU,CAAC,GAAG,CAAC,IAAIR,eAAe,CAACO,IAAI,EAAE,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;MACzH,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACZ,eAAe,CAAC;MACjD,IAAIU,aAAa,CAACG,IAAI,KAAK,QAAQ,EAAE;QACnC,MAAM;UAAEC,WAAW;UAAEC;QAAQ,CAAC,GAAGL,aAAa;QAC9C;QACA;MACF;IACF;EACF,CAAC,EAAE,CAACV,eAAe,CAAC,CAAC;EAErB,oBACEX,OAAA;IAAA2B,QAAA,gBACI3B,OAAA,CAACN,SAAS;MACRe,YAAY,EAAEA,YAAa;MAC3BN,WAAW,EAAEA,WAAY;MACzBI,OAAO,EAAEA,OAAQ;MACjBG,IAAI,EAAEA,IAAK;MACXkB,iBAAiB,EAAEd,qBAAsB;MACzCT,SAAS,EAAEA;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrB,eACFhC,OAAA;MAAKiC,SAAS,EAAC,eAAe;MAAAN,QAAA,gBAC5B3B,OAAA,CAACJ,MAAM;QAACe,eAAe,EAAEA;MAAgB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC5ChC,OAAA,CAACH,OAAO;QAACM,WAAW,EAAEA,WAAY;QAACE,SAAS,EAAEA,SAAU;QAACK,IAAI,EAAEA;MAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAMJ;AAEV;AAAC9B,EAAA,CAnDQD,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAqDvB,eAAeA,cAAc;AAC7B;AACA;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}