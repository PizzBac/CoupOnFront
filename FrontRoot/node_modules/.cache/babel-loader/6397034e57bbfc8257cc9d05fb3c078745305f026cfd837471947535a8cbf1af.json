{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/front/banker.js\",\n  _s = $RefreshSig$();\n//Banker.js\nimport React, { useState } from 'react';\nimport Console from '../front/console';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Banker(props) {\n  _s();\n  const {\n    receivedMessage\n  } = props;\n  const [localPlayerCards, setLocalPlayerCards] = useState([]);\n  function handleReceivedMessage(message) {\n    const messageObj = JSON.parse(message);\n    if (messageObj.type === 'UPDATE') {\n      const content = messageObj.content;\n      const localCards = content.localPlayerCards;\n      if (localCards && localCards.length > 0) {\n        setLocalPlayerCards(localCards);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"banker\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"announcement anc-message\",\n      children: receivedMessage ? receivedMessage : \"다른 플레이어의 차례를 기다리고 있습니다.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Console, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), localPlayerCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Local Player Cards:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: localPlayerCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: card\n        }, card, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Banker, \"GLk7B77ljBNxT0kLePtruyoqJRQ=\");\n_c = Banker;\nexport default Banker;\nvar _c;\n$RefreshReg$(_c, \"Banker\");","map":{"version":3,"names":["React","useState","Console","jsxDEV","_jsxDEV","Banker","props","_s","receivedMessage","localPlayerCards","setLocalPlayerCards","handleReceivedMessage","message","messageObj","JSON","parse","type","content","localCards","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/front/banker.js"],"sourcesContent":["//Banker.js\nimport React, { useState } from 'react';\nimport Console from '../front/console';\n\nfunction Banker(props) {\n  const { receivedMessage } = props;\n  const [localPlayerCards, setLocalPlayerCards] = useState([]);\n\n  function handleReceivedMessage(message) {\n    const messageObj = JSON.parse(message);\n\n    if (messageObj.type === 'UPDATE') {\n      const content = messageObj.content;\n      const localCards = content.localPlayerCards;\n\n      if (localCards && localCards.length > 0) {\n        setLocalPlayerCards(localCards);\n      }\n    }\n  }\n\n  return (\n    <div className=\"banker\">\n      <p className=\"announcement anc-message\">\n        {receivedMessage ? receivedMessage : \"다른 플레이어의 차례를 기다리고 있습니다.\"}\n      </p>  \n      <Console/>\n      {localPlayerCards.length > 0 &&\n        <div>\n          <p>Local Player Cards:</p>\n          <ul>\n            {localPlayerCards.map(card => (\n              <li key={card}>{card}</li>\n            ))}\n          </ul>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default Banker;\n\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAgB,CAAC,GAAGF,KAAK;EACjC,MAAM,CAACG,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5D,SAASU,qBAAqBA,CAACC,OAAO,EAAE;IACtC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC;IAEtC,IAAIC,UAAU,CAACG,IAAI,KAAK,QAAQ,EAAE;MAChC,MAAMC,OAAO,GAAGJ,UAAU,CAACI,OAAO;MAClC,MAAMC,UAAU,GAAGD,OAAO,CAACR,gBAAgB;MAE3C,IAAIS,UAAU,IAAIA,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;QACvCT,mBAAmB,CAACQ,UAAU,CAAC;MACjC;IACF;EACF;EAEA,oBACEd,OAAA;IAAKgB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBjB,OAAA;MAAGgB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EACpCb,eAAe,GAAGA,eAAe,GAAG;IAAyB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5D,eACJrB,OAAA,CAACF,OAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,EACThB,gBAAgB,CAACU,MAAM,GAAG,CAAC,iBAC1Bf,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC1BrB,OAAA;QAAAiB,QAAA,EACGZ,gBAAgB,CAACiB,GAAG,CAACC,IAAI,iBACxBvB,OAAA;UAAAiB,QAAA,EAAgBM;QAAI,GAAXA,IAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAEV;AAAClB,EAAA,CAnCQF,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAqCf,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}