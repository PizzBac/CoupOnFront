{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHook.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSubscription, useStompClient } from 'react-stomp-hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHook(_ref) {\n  _s();\n  let {\n    subscription,\n    destination,\n    headers,\n    body,\n    onReceivedMessage\n  } = _ref;\n  const stompClient = useStompClient();\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  useSubscription(subscription, str => {\n    console.log(str.body);\n    // const object = JSON.parse(str.body);\n    setReceivedMessage(str.body);\n  });\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (stompClient) {\n      stompClient.publish({\n        destination,\n        headers,\n        body\n      });\n    } else {\n      console.log(\"stompClient is null\");\n    } // 통신이 안되면.\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [headers.map((header, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: body[index],\n            checked: selectedOption === body[index],\n            onChange: event => setSelectedOption(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), Object.values(header)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC11C\\uBC84\\uB85C \\uBA54\\uC138\\uC9C0 \\uBCF4\\uB0B4\\uAE30(\\uD1B5\\uC2E0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected option: \", selectedOption]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 1\n  }, this);\n}\n_s(StompHook, \"kPzT9ubyn8httxHJXOPOzs64cZQ=\", false, function () {\n  return [useStompClient, useSubscription];\n});\n_c = StompHook;\nexport default StompHook;\nvar _c;\n$RefreshReg$(_c, \"StompHook\");","map":{"version":3,"names":["React","useState","useSubscription","useStompClient","jsxDEV","_jsxDEV","StompHook","_ref","_s","subscription","destination","headers","body","onReceivedMessage","stompClient","receivedMessage","setReceivedMessage","str","console","log","handleSubmit","event","preventDefault","publish","children","onSubmit","map","header","index","type","value","checked","selectedOption","onChange","setSelectedOption","target","fileName","_jsxFileName","lineNumber","columnNumber","Object","values","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHook.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSubscription, useStompClient } from 'react-stomp-hooks';\n\nfunction StompHook({ subscription, destination, headers, body, onReceivedMessage }) {\n  const stompClient = useStompClient();\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n\n  useSubscription(subscription, (str) => {\n    console.log(str.body);\n    // const object = JSON.parse(str.body);\n    setReceivedMessage(str.body);\n  });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (stompClient) {\n      stompClient.publish({\n        destination,\n        headers,\n        body,\n      });\n    } else {\n      console.log(\"stompClient is null\");\n    } // 통신이 안되면.\n  }\n\n  return (\n<div>\n      <form onSubmit={handleSubmit}>\n        {headers.map((header, index) => (\n          <div key={index}>\n            <label>\n              <input\n                type=\"radio\"\n                value={body[index]}\n                checked={selectedOption === body[index]}\n                onChange={(event) => setSelectedOption(event.target.value)}\n              />\n              {Object.values(header)}\n            </label>\n          </div>\n        ))}\n        <button type=\"submit\">서버로 메세지 보내기(통신)</button>\n      </form>\n      <p>Selected option: {selectedOption}</p>\n    </div>\n  );\n}\n\nexport default StompHook;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,cAAc,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,SAASC,SAASA,CAAAC,IAAA,EAAkE;EAAAC,EAAA;EAAA,IAAjE;IAAEC,YAAY;IAAEC,WAAW;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAkB,CAAC,GAAAN,IAAA;EAChF,MAAMO,WAAW,GAAGX,cAAc,EAAE;EACpC,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1DC,eAAe,CAACO,YAAY,EAAGQ,GAAG,IAAK;IACrCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACL,IAAI,CAAC;IACrB;IACAI,kBAAkB,CAACC,GAAG,CAACL,IAAI,CAAC;EAC9B,CAAC,CAAC;EAEF,SAASQ,YAAYA,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAIR,WAAW,EAAE;MACfA,WAAW,CAACS,OAAO,CAAC;QAClBb,WAAW;QACXC,OAAO;QACPC;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLM,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;EACJ;;EAEA,oBACFd,OAAA;IAAAmB,QAAA,gBACMnB,OAAA;MAAMoB,QAAQ,EAAEL,YAAa;MAAAI,QAAA,GAC1Bb,OAAO,CAACe,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBvB,OAAA;QAAAmB,QAAA,eACEnB,OAAA;UAAAmB,QAAA,gBACEnB,OAAA;YACEwB,IAAI,EAAC,OAAO;YACZC,KAAK,EAAElB,IAAI,CAACgB,KAAK,CAAE;YACnBG,OAAO,EAAEC,cAAc,KAAKpB,IAAI,CAACgB,KAAK,CAAE;YACxCK,QAAQ,EAAGZ,KAAK,IAAKa,iBAAiB,CAACb,KAAK,CAACc,MAAM,CAACL,KAAK;UAAE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC3D,EACDC,MAAM,CAACC,MAAM,CAACd,MAAM,CAAC;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAChB,GATAX,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAWhB,CAAC,eACFlC,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAe;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC,eACPlC,OAAA;MAAAmB,QAAA,GAAG,mBAAiB,EAACQ,cAAc;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpC;AAEV;AAAC/B,EAAA,CA7CQF,SAAS;EAAA,QACIH,cAAc,EAGlCD,eAAe;AAAA;AAAAwC,EAAA,GAJRpC,SAAS;AA+ClB,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}