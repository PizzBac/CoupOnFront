{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider } from 'react-stomp-hooks';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Player from './Player';\nimport \"./StompHookProps.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHookProps() {\n  _s();\n  const subscription = \"/user/lobby\";\n  const [destination, setDestination] = useState(\"/app/create\");\n  const headers = JSON.stringify({\n    \"lobbyName\": \"Room1\"\n  });\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const handleReceivedMessage = message => {\n    setReceivedMessage(message);\n  };\n  useEffect(() => {\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      const parsedMessage = JSON.parse(receivedMessage);\n      if (parsedMessage.type === 'CHOICE') {\n        const {\n          userMessage,\n          content\n        } = parsedMessage;\n      } else if (parsedMessage.type === 'UPDATE') {\n        const {\n          content\n        } = parsedMessage;\n        const players = content.players;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: players.map(player => /*#__PURE__*/_jsxDEV(Player, {\n            name: player.name,\n            coins: player.coins,\n            cardNumbers: player.cardNumbers\n          }, player.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  }, [receivedMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(StompSessionProvider, {\n      url: \"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\",\n      children: [/*#__PURE__*/_jsxDEV(StompHook, {\n        subscription: subscription,\n        destination: destination,\n        headers: headers,\n        body: body,\n        onReceivedMessage: handleReceivedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BankerConsole\",\n        children: [/*#__PURE__*/_jsxDEV(Banker, {\n          receivedMessage: receivedMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Console, {\n          destination: destination,\n          body: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(StompHookProps, \"0GBxm/YpiI2rItqzyatRKvnOKzg=\");\n_c = StompHookProps;\nexport default StompHookProps;\nvar _c;\n$RefreshReg$(_c, \"StompHookProps\");","map":{"version":3,"names":["React","useState","useEffect","StompHook","StompSessionProvider","Banker","Console","Player","jsxDEV","_jsxDEV","StompHookProps","_s","subscription","destination","setDestination","headers","JSON","stringify","body","receivedMessage","setReceivedMessage","handleReceivedMessage","message","trim","startsWith","endsWith","parsedMessage","parse","type","userMessage","content","players","children","map","player","name","coins","cardNumbers","fileName","_jsxFileName","lineNumber","columnNumber","url","onReceivedMessage","className","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider } from 'react-stomp-hooks';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Player from './Player';\nimport \"./StompHookProps.css\"\n\nfunction StompHookProps() {\n  const subscription = \"/user/lobby\";\n  const [destination, setDestination] = useState(\"/app/create\");\n  const headers = JSON.stringify({ \"lobbyName\": \"Room1\" });\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n\n  const handleReceivedMessage = (message) => {\n    setReceivedMessage(message);\n  };\n\n\n  useEffect(() => {\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      const parsedMessage = JSON.parse(receivedMessage);\n      if (parsedMessage.type === 'CHOICE') {\n        const { userMessage, content } = parsedMessage;\n      } else if (parsedMessage.type === 'UPDATE') {\n        const { content } = parsedMessage;\n        const players = content.players;\n        return (\n          <div>\n            {players.map(player => (\n              <Player key={player.name} name={player.name} coins={player.coins} cardNumbers={player.cardNumbers} />\n            ))}\n          </div>\n        );\n      }\n    }\n  }, [receivedMessage]);\n\n  return (\n    <div>\n      {/* <button onClick={handleOpenModal}>선택지 보기</button> */}\n      <StompSessionProvider url=\"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\">\n        <StompHook\n          subscription={subscription}\n          destination={destination}\n          headers={headers}\n          body={body}\n          onReceivedMessage={handleReceivedMessage}\n        />\n        <div className=\"BankerConsole\">\n          <Banker receivedMessage={receivedMessage} />\n          <Console destination={destination} body={body} />\n        </div>\n        <Player />\n      </StompSessionProvider>\n    </div>\n  );\n}\n\nexport default StompHookProps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}