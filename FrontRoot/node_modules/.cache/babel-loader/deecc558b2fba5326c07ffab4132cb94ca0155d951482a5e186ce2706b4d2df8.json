{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHook.js\",\n  _s = $RefreshSig$();\n//StompHook.js\nimport React, { useState } from 'react';\nimport { useSubscription, useStompClient } from 'react-stomp-hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHook(_ref) {\n  _s();\n  let {\n    subscription,\n    destination,\n    headers,\n    body,\n    onReceivedMessage\n  } = _ref;\n  const stompClient = useStompClient();\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const options = [{\n    value: \"Income\",\n    label: \"Income\"\n  }, {\n    value: \"Tax\",\n    label: \"Tax\"\n  }, {\n    value: \"Bonus\",\n    label: \"Bonus\"\n  }];\n  const [selectedOption, setSelectedOption] = useState(options[0].value);\n  useSubscription(subscription, str => {\n    console.log(str.body);\n    // const object = JSON.parse(str.body);\n    onReceivedMessage(str.body);\n  });\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (stompClient) {\n      stompClient.publish({\n        destination,\n        // headers: {...headers, lobbyName: selectedOption},\n        headers,\n        body: {\n          selectedOption\n        }\n      });\n    } else {\n      console.log(\"stompClient is null\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"body:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"options\",\n          value: option.value,\n          checked: selectedOption === option.value,\n          onChange: e => setSelectedOption(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), option.label]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC11C\\uBC84\\uB85C \\uBA54\\uC138\\uC9C0 \\uBCF4\\uB0B4\\uAE30(\\uD1B5\\uC2E0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Received message: \", receivedMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 1\n  }, this);\n}\n_s(StompHook, \"MYfjeYp4aLo0YVIdTNCEXpdyuMs=\", false, function () {\n  return [useStompClient, useSubscription];\n});\n_c = StompHook;\nexport default StompHook;\nvar _c;\n$RefreshReg$(_c, \"StompHook\");","map":{"version":3,"names":["React","useState","useSubscription","useStompClient","jsxDEV","_jsxDEV","StompHook","_ref","_s","subscription","destination","headers","body","onReceivedMessage","stompClient","receivedMessage","setReceivedMessage","options","value","label","selectedOption","setSelectedOption","str","console","log","handleSubmit","event","preventDefault","publish","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","name","checked","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHook.js"],"sourcesContent":["//StompHook.js\nimport React, { useState } from 'react';\nimport { useSubscription, useStompClient } from 'react-stomp-hooks';\n\nfunction StompHook({ subscription, destination, headers, body, onReceivedMessage }) {\n  const stompClient = useStompClient();\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n\n  const options = [\n    { value: \"Income\", label: \"Income\" },\n    { value: \"Tax\", label: \"Tax\" },\n    { value: \"Bonus\", label: \"Bonus\" },\n  ];\n\n  const [selectedOption, setSelectedOption] = useState(options[0].value);\n\n  useSubscription(subscription, (str) => {\n    console.log(str.body);\n    // const object = JSON.parse(str.body);\n    onReceivedMessage(str.body);\n  });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (stompClient) {\n      stompClient.publish({\n        destination,\n        // headers: {...headers, lobbyName: selectedOption},\n        headers,\n        body : {selectedOption},\n      });\n    } else {\n      console.log(\"stompClient is null\");\n    }\n  }\n\n  return (\n<div>\n      <form onSubmit={handleSubmit}>\n        <span>body:</span>\n        {options.map((option) => (\n          <label key={option.value}>\n            <input\n              type=\"radio\"\n              name=\"options\"\n              value={option.value}\n              checked={selectedOption === option.value}\n              onChange={(e) => setSelectedOption(e.target.value)}\n            />\n            {option.label}\n          </label>\n        ))}\n        <button type=\"submit\">서버로 메세지 보내기(통신)</button>\n      </form>\n      <p>Received message: {receivedMessage}</p>\n    </div>\n  );\n}\n\nexport default StompHook;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}