{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider } from 'react-stomp-hooks';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Modal from '../front/modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHookProps() {\n  _s();\n  const subscription = \"/user/lobby\";\n  const [destination, setDestination] = useState(\"/app/create\");\n  const headers = JSON.stringify({\n    \"lobbyName\": \"Room1\"\n  });\n  const [body, setBody] = useState(\"Income\");\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [selectedContent, setSelectedContent] = useState(\"\");\n  const handleReceivedMessage = message => {\n    setReceivedMessage(message);\n    if (messageObject.type === \"CHOICE\") {\n      setSelectedContent(\"\");\n      setShowModal(true);\n    }\n  };\n\n  // useEffect(() => {\n  //   if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n  //     console.log('JSON형태입니다.');\n  //     const messageObject = JSON.parse(message);\n  //     console.log(messageObject);\n  //   } else {\n  //     console.log('JSON형태가 아닙니다.');\n  //   }\n  // }, [receivedMessage]);\n\n  const handleGameStart = () => {\n    setDestination(\"/app/game\");\n  };\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n  const handleContentSelect = content => {\n    setSelectedContent(content);\n    setShowModal(false);\n    const message = {\n      type: \"CHOICE\",\n      content: content\n    };\n    const headers = {\n      lobbyName: \"Room1\"\n    };\n    const messageBody = JSON.stringify(message);\n    StompHook.sendMessage(destination, headers, messageBody);\n  };\n  return /*#__PURE__*/_jsxDEV(StompSessionProvider, {\n    url: \"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\",\n    children: [/*#__PURE__*/_jsxDEV(StompHook, {\n      subscription: subscription,\n      destination: destination,\n      headers: headers,\n      body: body,\n      onReceivedMessage: handleReceivedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Banker, {\n      receivedMessage: receivedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Console, {\n      destination: destination,\n      body: body,\n      setBody: setBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGameStart,\n      children: \"\\uAC8C\\uC784 \\uC2A4\\uD0C0\\uD2B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      handleClose: handleModalClose,\n      children: [selectedContent === \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Please select an option:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), receivedMessage.content.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleContentSelect(option),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), selectedContent !== \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have selected: \", selectedContent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(StompHookProps, \"PjyS0Mt+1EWtsluZHqWbc1Ciuk0=\");\n_c = StompHookProps;\nexport default StompHookProps;\nvar _c;\n$RefreshReg$(_c, \"StompHookProps\");","map":{"version":3,"names":["React","useState","useEffect","StompHook","StompSessionProvider","Banker","Console","Modal","jsxDEV","_jsxDEV","StompHookProps","_s","subscription","destination","setDestination","headers","JSON","stringify","body","setBody","receivedMessage","setReceivedMessage","showModal","setShowModal","selectedContent","setSelectedContent","handleReceivedMessage","message","messageObject","type","handleGameStart","handleModalClose","handleContentSelect","content","lobbyName","messageBody","sendMessage","url","children","onReceivedMessage","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleClose","map","option","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider } from 'react-stomp-hooks';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Modal from '../front/modal';\n\nfunction StompHookProps() {\n  const subscription = \"/user/lobby\";\n  const [destination, setDestination] = useState(\"/app/create\");\n  const headers = JSON.stringify({ \"lobbyName\": \"Room1\" });\n  const [body, setBody] = useState(\"Income\");\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [selectedContent, setSelectedContent] = useState(\"\");\n\n  const handleReceivedMessage = (message) => {\n    setReceivedMessage(message);\n\n    if (messageObject.type === \"CHOICE\") {\n      setSelectedContent(\"\");\n      setShowModal(true);\n    }\n  };\n\n  // useEffect(() => {\n  //   if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n  //     console.log('JSON형태입니다.');\n  //     const messageObject = JSON.parse(message);\n  //     console.log(messageObject);\n  //   } else {\n  //     console.log('JSON형태가 아닙니다.');\n  //   }\n  // }, [receivedMessage]);\n\n  const handleGameStart = () => {\n    setDestination(\"/app/game\");\n  }\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleContentSelect = (content) => {\n    setSelectedContent(content);\n    setShowModal(false);\n\n    const message = {\n      type: \"CHOICE\",\n      content: content\n    };\n\n    const headers = {\n      lobbyName: \"Room1\"\n    };\n\n    const messageBody = JSON.stringify(message);\n    StompHook.sendMessage(destination, headers, messageBody);\n  };\n\n  return (\n    <StompSessionProvider url=\"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\">\n      <StompHook subscription={subscription} destination={destination} headers={headers} body={body} onReceivedMessage={handleReceivedMessage} />\n      <Banker receivedMessage={receivedMessage} />\n      <Console destination={destination} body={body} setBody={setBody} />\n      <button onClick={handleGameStart}>게임 스타트</button>\n      {showModal && (\n        <Modal handleClose={handleModalClose}>\n          {selectedContent === \"\" && (\n            <div>\n              <h2>Please select an option:</h2>\n              {receivedMessage.content.map((option) => (\n                <button key={option} onClick={() => handleContentSelect(option)}>\n                  {option}\n                </button>\n              ))}\n            </div>\n          )}\n          {selectedContent !== \"\" && <p>You have selected: {selectedContent}</p>}\n        </Modal>\n      )}\n    </StompSessionProvider>\n  );\n}\n\nexport default StompHookProps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}