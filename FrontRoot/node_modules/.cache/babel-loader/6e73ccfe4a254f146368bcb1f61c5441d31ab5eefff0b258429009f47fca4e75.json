{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider } from 'react-stomp-hooks';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport CustomModal from './CustomModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHookProps() {\n  _s();\n  const subscription = \"/user/lobby\";\n  const [destination, setDestination] = useState(\"/app/create\");\n  const headers = JSON.stringify({\n    \"lobbyName\": \"Room1\"\n  });\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null); // 새로운 state 추가\n\n  let content;\n  const handleReceivedMessage = message => {\n    setReceivedMessage(message);\n  };\n  const handleGameStart = () => {\n    setDestination(\"/app/game\");\n  };\n  const [showModal, setShowModal] = useState(false);\n  const [choice, setChoice] = useState(\"\");\n  const handleOpenModal = () => {\n    console.log(\"Open modal\");\n    setModalContent(content); // content 값을 modalContent state로 설정\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  const handleSelectChoice = choice => {\n    setChoice(choice);\n    handleCloseModal();\n  };\n  useEffect(() => {\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      const parsedMessage = JSON.parse(receivedMessage);\n      if (parsedMessage.type === 'CHOICE') {\n        const {\n          userMessage,\n          content\n        } = parsedMessage;\n        setModalContent(content); // content 값을 modalContent state로 설정\n        setShowModal(true);\n      }\n    }\n  }, [receivedMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenModal,\n      children: \"\\uC120\\uD0DD\\uC9C0 \\uBCF4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StompSessionProvider, {\n      url: \"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\",\n      children: [/*#__PURE__*/_jsxDEV(StompHook, {\n        subscription: subscription,\n        destination: destination,\n        headers: headers,\n        body: body,\n        onReceivedMessage: handleReceivedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Banker, {\n        receivedMessage: receivedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Console, {\n        destination: destination,\n        body: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOpenModal,\n          children: \"\\uC120\\uD0DD\\uC9C0 \\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomModal, {\n          show: showModal,\n          onClose: handleCloseModal,\n          onSelectChoice: handleSelectChoice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), choice && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC120\\uD0DD\\uD55C \\uD56D\\uBAA9: \", choice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(StompHookProps, \"UGnrg5JAyN9ndfFka+yS7LPBcLA=\");\n_c = StompHookProps;\nexport default StompHookProps;\nvar _c;\n$RefreshReg$(_c, \"StompHookProps\");","map":{"version":3,"names":["React","useState","useEffect","StompHook","StompSessionProvider","Banker","Console","CustomModal","jsxDEV","_jsxDEV","StompHookProps","_s","subscription","destination","setDestination","headers","JSON","stringify","body","receivedMessage","setReceivedMessage","modalContent","setModalContent","content","handleReceivedMessage","message","handleGameStart","showModal","setShowModal","choice","setChoice","handleOpenModal","console","log","handleCloseModal","handleSelectChoice","trim","startsWith","endsWith","parsedMessage","parse","type","userMessage","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","url","onReceivedMessage","show","onClose","onSelectChoice","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider } from 'react-stomp-hooks';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport CustomModal from './CustomModal';\n\nfunction StompHookProps() {\n  const subscription = \"/user/lobby\";\n  const [destination, setDestination] = useState(\"/app/create\");\n  const headers = JSON.stringify({ \"lobbyName\": \"Room1\" });\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null); // 새로운 state 추가\n\n  let content;\n\n  const handleReceivedMessage = (message) => {\n    setReceivedMessage(message);\n  };\n\n  const handleGameStart = () => {\n    setDestination(\"/app/game\");\n  }\n\n  const [showModal, setShowModal] = useState(false);\n  const [choice, setChoice] = useState(\"\");\n\n  const handleOpenModal = () => {\n    console.log(\"Open modal\");\n    setModalContent(content); // content 값을 modalContent state로 설정\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleSelectChoice = (choice) => {\n    setChoice(choice);\n    handleCloseModal();\n  };\n\n  useEffect(() => {\n    if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n      const parsedMessage = JSON.parse(receivedMessage);\n      if (parsedMessage.type === 'CHOICE') {\n        const { userMessage, content } = parsedMessage;\n        setModalContent(content); // content 값을 modalContent state로 설정\n        setShowModal(true);\n      }\n    }\n  }, [receivedMessage]);\n\n  return (\n    <div>\n      <button onClick={handleOpenModal}>선택지 보기</button>\n      <StompSessionProvider url=\"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\">\n        <StompHook\n          subscription={subscription}\n          destination={destination}\n          headers={headers}\n          body={body}\n          onReceivedMessage={handleReceivedMessage}\n        />\n        <Banker receivedMessage={receivedMessage} />\n        <Console destination={destination} body={body} />\n        <div>\n          <button onClick={handleOpenModal}>선택지 보기</button>\n          <CustomModal\n            show={showModal}\n            onClose={handleCloseModal}\n            onSelectChoice={handleSelectChoice}\n          />\n          {choice && <p>선택한 항목: {choice}</p>}\n        </div>\n      </StompSessionProvider>\n    </div>\n  );\n}\n\nexport default StompHookProps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}