{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHook.js\",\n  _s = $RefreshSig$();\n//StompHook.js\nimport React, { useState } from 'react';\nimport { useSubscription, useStompClient } from 'react-stomp-hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHook(Props) {\n  _s();\n  const stompClient = useStompClient();\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const [subscription, setSubscription] = useState(\"/user/lobby\");\n  const [destination, setDestination] = useState(\"/app/create\");\n  const [headers, setHeaders] = useState(JSON.stringify({\n    \"lobbyName\": \"Room1\"\n  }));\n  const [body, setBody] = useState(\"\");\n  const options = [{\n    value: \"Income\",\n    label: \"Income\"\n  }, {\n    value: \"Tax\",\n    label: \"Tax\"\n  }, {\n    value: \"Bonus\",\n    label: \"Bonus\"\n  }];\n  const [selectedOption, setSelectedOption] = useState(options[0].value);\n  useSubscription(subscription, str => {\n    console.log(str.body);\n    onReceivedMessage(str.body);\n  });\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (stompClient) {\n      stompClient.publish({\n        destination,\n        headers,\n        body: {\n          selectedOption\n        }\n      });\n    } else {\n      console.log(\"stompClient is null\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"subscription:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: subscription,\n          onChange: e => setSubscription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"destination:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: destination,\n          onChange: e => setDestination(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"headers:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: headers,\n          onChange: e => setHeaders(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"body:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"options\",\n            value: option.value,\n            checked: selectedOption === option.value,\n            onChange: e => setSelectedOption(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), option.label]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC11C\\uBC84\\uB85C \\uBA54\\uC138\\uC9C0 \\uBCF4\\uB0B4\\uAE30(\\uD1B5\\uC2E0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Received message: \", receivedMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(StompHook, \"A2IEx+zTz8++opQa1+oojdO+VbU=\", false, function () {\n  return [useStompClient, useSubscription];\n});\n_c = StompHook;\nexport default StompHook;\nvar _c;\n$RefreshReg$(_c, \"StompHook\");","map":{"version":3,"names":["React","useState","useSubscription","useStompClient","jsxDEV","_jsxDEV","StompHook","Props","_s","stompClient","receivedMessage","setReceivedMessage","subscription","setSubscription","destination","setDestination","headers","setHeaders","JSON","stringify","body","setBody","options","value","label","selectedOption","setSelectedOption","str","console","log","onReceivedMessage","handleSubmit","event","preventDefault","publish","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","map","option","name","checked","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHook.js"],"sourcesContent":["//StompHook.js\nimport React, { useState } from 'react';\nimport { useSubscription, useStompClient } from 'react-stomp-hooks';\n\nfunction StompHook(Props) {\n  const stompClient = useStompClient();\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const [subscription, setSubscription] = useState(\"/user/lobby\");\n  const [destination, setDestination] = useState(\"/app/create\");\n  const [headers, setHeaders] = useState(JSON.stringify({\"lobbyName\":\"Room1\"}));\n  const [body, setBody] = useState(\"\");\n\n  const options = [\n    { value: \"Income\", label: \"Income\" },\n    { value: \"Tax\", label: \"Tax\" },\n    { value: \"Bonus\", label: \"Bonus\" },\n  ];\n\n  const [selectedOption, setSelectedOption] = useState(options[0].value);\n\n  useSubscription(subscription, (str) => {\n    console.log(str.body);\n    onReceivedMessage(str.body);\n  });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (stompClient) {\n      stompClient.publish({\n        destination,\n        headers,\n        body: {selectedOption},\n      });\n    } else {\n      console.log(\"stompClient is null\");\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <span>subscription:</span>\n          <input\n            type=\"text\"\n            value={subscription}\n            onChange={(e) => setSubscription(e.target.value)}\n          />\n        </div>\n        <div>\n          <span>destination:</span>\n          <input\n            type=\"text\"\n            value={destination}\n            onChange={(e) => setDestination(e.target.value)}\n          />\n        </div>\n        <div>\n          <span>headers:</span>\n          <input\n            type=\"text\"\n            value={headers}\n            onChange={(e) => setHeaders(e.target.value)}\n          />\n        </div>\n        <div>\n          <span>body:</span>\n          {options.map((option) => (\n            <label key={option.value}>\n              <input\n                type=\"radio\"\n                name=\"options\"\n                value={option.value}\n                checked={selectedOption === option.value}\n                onChange={(e) => setSelectedOption(e.target.value)}\n              />\n              {option.label}\n            </label>\n          ))}\n        </div>\n        <button type=\"submit\">서버로 메세지 보내기(통신)</button>\n      </form>\n      <p>Received message: {receivedMessage}</p>\n    </div>\n  );\n}\n\nexport default StompHook;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}