{"ast":null,"code":"var _jsxFileName = \"/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider } from 'react-stomp-hooks';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Player from '../front/player'; // Player 컴포넌트를 import\n\nimport './StompHookProps.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StompHookProps() {\n  _s();\n  const subscription = \"/user/lobby\";\n  const [destination, setDestination] = useState(\"/app/create\");\n  const [lobbyName, setLobbyName] = useState(\"Room6\");\n  const [headers, setHeaders] = useState({\n    \"lobbyName\": lobbyName\n  }); //JSON stringfy 하면 안됨.\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n  const handleReceivedMessage = message => {\n    setReceivedMessage(message);\n  };\n\n  // receivedMessage가 업데이트되면 실행되는 useEffect\n  // useEffect(() => {\n  //   if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n  //     const parsedMessage = JSON.parse(receivedMessage);\n  //     if (parsedMessage.type === 'UPDATE') {\n  //       const { userMessage, content } = parsedMessage;\n  //       console.log(userMessage, content);\n  //       console.log(JSON.parse(receivedMessage).content.players);\n  //     } \n  //   }\n  // }, [receivedMessage]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(StompSessionProvider, {\n      url: \"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\",\n      children: [/*#__PURE__*/_jsxDEV(StompHook, {\n        subscription: subscription,\n        destination: destination,\n        headers: headers,\n        body: body,\n        onReceivedMessage: handleReceivedMessage,\n        lobbyName: lobbyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BankerConsole\",\n        children: [/*#__PURE__*/_jsxDEV(Banker, {\n          receivedMessage: receivedMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Console, {\n          destination: destination,\n          body: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}') && JSON.parse(receivedMessage).type === 'UPDATE' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JSON.parse(receivedMessage).content.players.map(player => /*#__PURE__*/_jsxDEV(Player, {\n          name: player.name,\n          coins: player.coins,\n          cardNumbers: player.cardNumbers\n        }, player.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(StompHookProps, \"x2NznabE3/YrLUVqtQoXjTsTEWo=\");\n_c = StompHookProps;\nexport default StompHookProps;\nvar _c;\n$RefreshReg$(_c, \"StompHookProps\");","map":{"version":3,"names":["React","useState","useEffect","StompHook","StompSessionProvider","Banker","Console","Player","jsxDEV","_jsxDEV","StompHookProps","_s","subscription","destination","setDestination","lobbyName","setLobbyName","headers","setHeaders","body","receivedMessage","setReceivedMessage","handleReceivedMessage","message","children","url","onReceivedMessage","fileName","_jsxFileName","lineNumber","columnNumber","className","trim","startsWith","endsWith","JSON","parse","type","content","players","map","player","name","coins","cardNumbers","_c","$RefreshReg$"],"sources":["/Users/joshhartnett/ServerStomp/stomp/src/ServerQue/StompHookProps.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StompHook from './StompHook';\nimport { StompSessionProvider } from 'react-stomp-hooks';\nimport Banker from '../front/banker';\nimport Console from '../front/console';\nimport Player from '../front/player'; // Player 컴포넌트를 import\n\nimport './StompHookProps.css';\n\nfunction StompHookProps() {\n  const subscription = \"/user/lobby\";\n  const [destination, setDestination] = useState(\"/app/create\");\n  const [lobbyName, setLobbyName] = useState(\"Room6\");\n  const [headers, setHeaders] = useState({\"lobbyName\":lobbyName}); //JSON stringfy 하면 안됨.\n  const body = \"Income\";\n  const [receivedMessage, setReceivedMessage] = useState(\"\");\n\n  const handleReceivedMessage = (message) => {\n    setReceivedMessage(message);\n  };\n\n  // receivedMessage가 업데이트되면 실행되는 useEffect\n  // useEffect(() => {\n  //   if (typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}')) {\n  //     const parsedMessage = JSON.parse(receivedMessage);\n  //     if (parsedMessage.type === 'UPDATE') {\n  //       const { userMessage, content } = parsedMessage;\n  //       console.log(userMessage, content);\n  //       console.log(JSON.parse(receivedMessage).content.players);\n  //     } \n  //   }\n  // }, [receivedMessage]);\n\n  return (\n    <div>\n      <StompSessionProvider url=\"ws://javaspringbootcoupgamebackend-env.eba-2u3en2tr.ap-northeast-2.elasticbeanstalk.com/ws\">\n        <StompHook\n          subscription={subscription}\n          destination={destination}\n          headers={headers}\n          body={body}\n          onReceivedMessage={handleReceivedMessage}\n          lobbyName={lobbyName}\n        />\n        <div className=\"BankerConsole\">\n          <Banker receivedMessage={receivedMessage} />\n          <Console destination={destination} body={body} />\n        </div>\n        {typeof receivedMessage === 'string' && receivedMessage.trim().startsWith('{') && receivedMessage.trim().endsWith('}') && JSON.parse(receivedMessage).type === 'UPDATE' &&\n          <div>\n            {JSON.parse(receivedMessage).content.players.map(player => (\n              <Player key={player.name} name={player.name} coins={player.coins} cardNumbers={player.cardNumbers} />\n            ))}\n          </div>\n        }\n      </StompSessionProvider>\n    </div>\n  );\n}\n\nexport default StompHookProps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}